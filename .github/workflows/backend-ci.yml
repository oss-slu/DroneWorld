name: Backend CI

on:
  push:
    branches:
      - main
      - docker-main
  pull_request:
    branches:
      - main
      - docker-main

jobs:
  backend-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10"]

    permissions:
      contents: read
      packages: write   # needed to push to GHCR

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      # Install system dependencies (Ubuntu only)
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev build-essential libssl-dev ffmpeg

      # Install system dependencies (MacOS only)
      - name: Install system dependencies (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install portaudio pkg-config ffmpeg

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      # Lint & Format Check
      - name: Lint & Format Check
        run: |
          python -m pip install flake8 black autoflake
          flake8 backend/ --max-line-length=120 --exit-zero
          black --check backend/ || echo "Run 'black backend/' to fix formatting"
          autoflake --check --remove-unused-variables --remove-all-unused-imports -r backend/ || echo "Unused imports found"

      # Optional: Auto-fix formatting and unused imports on push
      - name: Auto-fix formatting
        if: github.event_name == 'push'
        run: |
          black backend/
          autoflake --in-place --remove-unused-variables --remove-all-unused-imports -r backend/

      # Build Docker image (only on Ubuntu)
      - name: Build Docker image
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker build -t ghcr.io/imjusthenry/droneworld/backend:latest ./backend

      # Log in to GHCR (only on Ubuntu)
      - name: Log in to GHCR
        if: matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Push Docker image (only on Ubuntu)
      - name: Push Docker image
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker push ghcr.io/imjusthenry/droneworld/backend:latest
